@page "/editarusuario/{id:int}"
@using BminingBlazor.Services
@using Models
@using System.Runtime.CompilerServices
@using System.ComponentModel.DataAnnotations
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "AdminRRHH,Administracion")]

@inject IUserDataService UserDataService
<h3>Editar a @Email</h3>
<EditForm Model="@newUser" OnValidSubmit="@EditUsers">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group col-md-6">
        <label for="inputTContrato">Tipo de Contrato:</label>
        <select class="form-control" @bind="newUser.Cod_TipoContrato" required>
            @if (_listOfContratoModels is null)
            {
                <p><em>Cargando..</em></p>
            }
            else
            {
                @foreach (var contratos in _listOfContratoModels)
                {
                    <option value="@contratos.Cod_TipoContrato">@contratos.TipoContrato</option>
                }
            }
        </select>
    </div>
    <tr>
        <td>
            <label for="inputNombres">Cargo:</label>
            <InputText id="Cargo" @bind-Value="newUser.Cargo" />
            <label for="inputNombres">Teléfono:</label>
            <InputText id="Telefono" @bind-Value="newUser.Telefono" />
            <label for="inputNombres">Dirección:</label>
            <InputText id="Direccion" @bind-Value="newUser.Direccion" />
        </td>
    </tr>
    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }

    public string Email { get; set; }

    private MemberProjectEditModel newUser = new MemberProjectEditModel();
    private List<ContratoModel> _listOfContratoModels;

    protected override async Task OnInitializedAsync()
    {
        //_listOfContratoModels = await UserDataService.ReadContrato();
        //var userEditModels = await UserDataService.ReadUser(Id);
        //var user = userEditModels.First();
        //newUser.Email_Bmining = user.Email_Bmining;
        //newUser.Nombre = user.Nombre;
        //newUser.Apellido_Paterno = user.Apellido_Paterno;
        //newUser.Apellido_Materno = user.Apellido_Materno;
        //newUser.Rut = user.Rut;
        //newUser.Cod_TipoContrato = user.Cod_TipoContrato;
        //newUser.Cargo = user.Cargo;
        //newUser.Telefono = user.Telefono;
        //newUser.Direccion = user.Direccion;
        //Email = user.Email_Bmining;

    }
    protected override async Task OnParametersSetAsync()
    {
        var user = await UserDataService.ReadUsers();
    }

    private async Task EditUsers()
    {
        var usuario2 = new MemberProjectEditModel()
        {
            Cargo = newUser.Cargo,
            Telefono = newUser.Telefono,
            Direccion = newUser.Direccion,
            Cod_TipoContrato = newUser.Cod_TipoContrato,
            Id = Id
        };
        await UserDataService.EditUser(usuario2);
        NavigationManager.NavigateTo("ViewUsers");
    }
}
