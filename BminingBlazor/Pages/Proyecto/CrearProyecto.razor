@page "/CrearProyecto"
@using Models
@using BminingBlazor.Services
@inject IProyectoDataService ProyectoDataService
@inject NavigationManager NavigationManager
@inject IUserDataService UserDataService
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "Administracion")]

<h3>CrearProyecto</h3>

<EditForm Model="@newProyecto" OnValidSubmit="@InsertProyecto">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <tr>
        <td>
            <label for="inputNombres">  Codigo de Proyecto:  </label>
            <InputText id="Cod_Proyecto" @bind-Value="newProyecto.Cod_Proyecto" />
            <label for="inputNombres">  Nombre de Proyecto:  </label>
            <InputText id="Nombre_Proyecto" @bind-Value="newProyecto.Nombre_Proyecto" />
        </td>
    </tr>
    <td>
        <tr>
            <td>
                <label for="inputNombres">  Fecha de Inicio:  </label>
                <InputDate id="Fecha_Inicio" @bind-Value="newProyecto.Fecha_Inicio" />
                <label for="inputNombres">  Fecha de Termino:  </label>
                <InputDate id="Fecha_Fin" @bind-Value="newProyecto.Fecha_Fin" />
            </td>
        </tr>
    </td>
    <tr>
        <td>
            <label for="inputNombres">  Tipo de Proyecto:  </label>
            <select class="form-control" @bind="newProyecto.Cod_TipoProyecto" required>
                @if (tipro != null)
                {
                    @foreach (var tipoproyecto in tipro)
                    {
                        <option value="@tipoproyecto.Cod_TipoProyecto">@tipoproyecto.Tipo_Proyecto</option>
                    }
                }

            </select>
        </td>
    </tr>

    <tr>
    </tr>
    <button type="submit" class="btn btn-primary">Siguiente</button>

</EditForm>

@code {
    private ProyectoModel newProyecto = new ProyectoModel();
    private List<TipoProyectoModel> tipro;




    protected override async Task OnInitializedAsync()
    {
        tipro = await ProyectoDataService.ReadTipoProyecto();

    }


    protected override void OnInitialized()
    {
        base.OnInitialized();
        newProyecto.Fecha_Inicio = DateTime.Today;
        newProyecto.Fecha_Fin = DateTime.Today;
    }

    private async Task InsertProyecto()
    {
        var proyecto = new ProyectoModel()
        {
            Cod_Proyecto = newProyecto.Cod_Proyecto,
            Nombre_Proyecto = newProyecto.Nombre_Proyecto,
            Cod_TipoProyecto = newProyecto.Cod_TipoProyecto,
            Fecha_Inicio = newProyecto.Fecha_Inicio,
            Fecha_Fin = newProyecto.Fecha_Fin



        };
        var id_proyecto = await ProyectoDataService.CreateProyecto(proyecto);

        NavigationManager.NavigateTo($"/agregarcliente/{id_proyecto}");

    }
}
