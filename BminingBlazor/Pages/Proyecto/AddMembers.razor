@page "/AddMembers/{id_proyecto:int}"

@using Models
@using BminingBlazor.Services

@inject IUserDataService UserDataService
@inject IProjectDataService ProjectDataService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "Administracion")]


<h3>Integrantes</h3>

<EditForm Model="@_newMember" OnValidSubmit="@InsertIntegrante">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group col-md-6">
        <label for="inputTContrato">Integrante del Proyecto:</label>
        <select class="form-control" @bind="_newMember.Id_Usuario" required>
            @if (_users is null)
            {
            }
            else
            {
                @foreach (var emails in _users)
                {
                    <option value="@emails.id">@emails.Email_Bmining</option>
                }
            }
        </select>
        <label for="inputHours">Horas invertidas</label>
        <input type="number" step="0.1" class="form-control" id="inputHours" placeholder="Horas invertidas" @bind="_newMember.Project_Hours" >
    </div>
    <MatButton type="submit" class="btn btn-primary">Agregar</MatButton>
</EditForm>

@code {
    [Parameter]
    public int id_proyecto { get; set; }
    private IntegranteModel _newMember = new IntegranteModel();
    private List<UsuarioModel> _users;
    protected override async Task OnInitializedAsync()
    {
        _users = await UserDataService.ReadUsers();
    }
    private async Task InsertIntegrante()
    {
        var integrante = new IntegranteModel()
        {
            Id_Usuario = _newMember.Id_Usuario,
            Id_Proyecto = id_proyecto
        };
       // await ProjectDataService.AddMember(integrante);
        NavigationManager.NavigateTo($"/ViewMembers/{id_proyecto}");
    }
}
