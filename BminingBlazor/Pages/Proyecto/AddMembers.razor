@page "/AddMembers/{idProject:int}"

@using Models
@using BminingBlazor.Services
@using Models.Project
@using ViewModels.User

@inject IUserDataService UserDataService
@inject IProjectDataService ProjectDataService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "Administracion")]


<h3>Integrantes</h3>

<EditForm Model="@_newMember" OnValidSubmit="@InsertIntegrante">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <MatButton Type="button" OnClick="AddMembersProjectCallback">
            @Resource.AddMember
        </MatButton>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>@Resource.Email</th>
                    <th>@Resource.ProjectHours</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var membersProject in _membersItems)
                {
                    <tr>
                        <td>
                            <div class="form-group col-md-6">

                                <select class="form-control" @bind="membersProject.MyId" required>
                                    @if (_users is null)
                                    {
                                    }
                                    else
                                    {
                                        @foreach (var emails in _users)
                                        {
                                            <option value="@emails.MyId">@emails.MyEmail</option>
                                        }
                                    }
                                </select>
                            </div>
                        </td>
                        <td><input type="number" step="0.1" @bind="@membersProject.MyProjectHours" /> </td>
                        <MatButton Type="button" OnClick="()=>DeleteMembersProject(membersProject)">
                            @Resource.Delete
                        </MatButton>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <MatButton type="submit" class="btn btn-primary">Agregar</MatButton>
</EditForm>

@code {
    [Parameter]
    public int idProject { get; set; }
    private MemberViewModel _newMember = new MemberViewModel();
    private List<MemberViewModel> _membersItems;
    private List<UserViewModel> _users;
    protected override async Task OnInitializedAsync()
    {
        _users = await UserDataService.ReadUsers();
        _membersItems = new List<MemberViewModel>();
    }

    private void AddMembersProjectCallback()
    {
        _membersItems.Add(new MemberViewModel());
    }

    

    private void DeleteMembersProject(MemberViewModel membersProject)
    {
        _membersItems.Remove(membersProject);
    }
    private async Task InsertIntegrante()
    {

        await ProjectDataService.AddMember(_membersItems, idProject);
        NavigationManager.NavigateTo($"/ViewMembers/{idProject}");
    }
}
