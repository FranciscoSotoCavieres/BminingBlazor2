@page "/ViewProject"
@using Models
@using BminingBlazor.ViewModels.Projects


@inject IProjectDataService ProjectDataService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IMatDialogService MatDialogService
@attribute [Authorize(Roles = "Administracion")]


    <h3>@Resource.Projects </h3>
    >
    @if (_projects == null)
    {        
    }
    else
    {
        <div class="table-responsive{-sm|-md|-lg|-xl}">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>@Resource.ProjectCode</th>
                        <th>@Resource.ProjectName</th>
                        <th>@Resource.EmailProjectManager</th>
                        <th>@Resource.ProjectType</th>
                        <th>@Resource.Client</th>
                        <th>@Resource.StatusProject </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in _projects)
                    {
                    <tr>
                        <td>@p.MyProjectCode</td>
                        <td>@p.MyProjectName</td>
                        <td>@p.MyProjectManager.MyEmail</td>
                        <td>@p.MyProjectType</td>
                        <td>@p.MyClientName</td>
                        <td>@p.MyProjectStatus</td>
                        <MatButton @onclick=@(()=>ViewIntegrantes(p.MyId))>@Resource.Members</MatButton>
                        <MatButton @onclick=@(()=>EditEstadoPago(p.MyId))>@Resource.EditPaymentStatus</MatButton>
                        <MatButton @onclick=@(()=>Delete(p.MyId))>@Resource.Delete</MatButton>
                    </tr>
                    }
                    <tr>
                        <MatButton type="button" class="btn btn-primary" @onclick="@NewProyecto">@Resource.AddProject</MatButton>
                    </tr>
                </tbody>
            </table>
        </div>
    }


    @code {
        private List<ProjectViewModel> _projects;

        protected override async Task OnInitializedAsync()
        {

            _projects = await ProjectDataService.ReadProjects();
        }

        public void EditEstadoPago(int idProject)
        {
            NavigationManager.NavigateTo($"/ViewPaymentStatus/{idProject}");
        }

        public void NewProyecto()
        {
            NavigationManager.NavigateTo("/CreateProject");
        }
        public void ViewIntegrantes(int idProject)
        {
            NavigationManager.NavigateTo($"ViewMembers/{idProject}");
        }

        public async void Delete(int idProject)
        {
            var answer = await MatDialogService.AskAsync(Resource.AreYouSureToDelete, new[] { Resource.Yes, Resource.No });
            if (answer == null || answer == Resource.No)
                return;
            await ProjectDataService.DeleteProject(idProject);
            NavigationManager.NavigateTo("/ViewProject", true);
        }
    }
