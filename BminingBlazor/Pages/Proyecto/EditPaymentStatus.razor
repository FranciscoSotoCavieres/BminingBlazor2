@page "/EditPaymentStatus/{cod_estadopago:int}"
@using Models
@using BminingBlazor.Services
@using BminingBlazor.ViewModels.Projects

@inject IProjectDataService ProjectDataService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "Administracion")]

<h3>Estados de Pago</h3>

<EditForm Model="@_newPayment" OnValidSubmit="@EditarEstadoPago">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group col-md-6">
        <label for="inputTContrato">Estado de Pago:</label>
        <select class="form-control" @bind="_newPayment.Cod_TipoEstadoPago" required>
            @if (_listTipoEstadoPagoModels is null)
            {
                
            }
            else
            {
                @foreach (var estado in _listTipoEstadoPagoModels)
                {
                    <option value="@estado.Cod_TipoEstadoPago">@estado.TipoEstadoPago</option>
                }
            }
        </select>
    </div>

    <MatButton type="submit" class="btn btn-primary">Cambiar</MatButton>


</EditForm>

@code {
        [Parameter]
        public int cod_estadopago { get; set; }
    private PaymentModel _newPayment = new PaymentModel();
    private List<TipoEstadoPagoModel> _listTipoEstadoPagoModels;

    protected override async Task OnInitializedAsync()
    {
        _listTipoEstadoPagoModels = await ProjectDataService.ReadPaymentStatusType();
    }

    private async Task EditarEstadoPago()
    {
        //    var payment = new PaymentViewModel()
        //    {
        //        PaymentStatusType = cod_estadopago,
        //        Cod_TipoEstadoPago = _newEstadoPago.Cod_TipoEstadoPago
        //    };
        //    await ProjectDataService.EditPaymentStatus(estadopago);
        //    NavigationManager.NavigateTo("/proyectos");
    }
}
