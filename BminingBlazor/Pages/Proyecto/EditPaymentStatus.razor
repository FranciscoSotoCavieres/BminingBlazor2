@page "/EditPaymentStatus/{paymentId:int}"
@using Models
@using BminingBlazor.Services
@using BminingBlazor.ViewModels.Projects
@using Models.Project

@inject IProjectDataService ProjectDataService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize(Roles = "Administracion")]

<h3>Estados de Pago</h3>

<EditForm Model="@_newPayment" OnValidSubmit="@EditarEstadoPago">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>

        <label for="inputNombres">  @Resource.ContractType:  </label>
        <InputSelect class="form-control" @bind-Value="_newPayment.PaymentStatusType" required>

            @foreach (var typePayment in Enum.GetValues(typeof(PaymentStatusTypeEnum)))
            {
            <option value="@typePayment">
                @{
                    switch (typePayment)
                    {
                        case PaymentStatusTypeEnum.NotInitiated:
                            <p>@Resource.NotInitiated</p>
                            break;
                        case PaymentStatusTypeEnum.Emitted:
                            <p>@Resource.Emitted</p>
                            break;
                        case PaymentStatusTypeEnum.Approved:
                            <p>@Resource.Approved</p>
                            break;
                        case PaymentStatusTypeEnum.Rejected:
                            <p>@Resource.Rejected</p>
                            break;
                        case PaymentStatusTypeEnum.Invoiced:
                            <p>@Resource.Invoiced</p>
                            break;
                        case PaymentStatusTypeEnum.Payed:
                            <p>@Resource.Payed</p>
                            break;
                        case PaymentStatusTypeEnum.NotApply:
                            <p>@Resource.NotApply</p>
                            break;
                    }
                }
            </option>
            }

        </InputSelect>

    </div>

    <MatButton type="submit" class="btn btn-primary">Cambiar</MatButton>


</EditForm>

@code {
        [Parameter]
        public int paymentId { get; set; }
    private PaymentViewModel _newPayment = new PaymentViewModel();


    protected override async Task OnInitializedAsync()
    {
        var viewPaymentStatus = await ProjectDataService.ReadPaymentStatu(paymentId);
        _newPayment.Id = paymentId;
        _newPayment.PaymentStatusType = viewPaymentStatus.PaymentStatusType;
        _newPayment.MyProjectId = viewPaymentStatus.MyProjectId;
    }

    private async Task EditarEstadoPago()
    {
        var payment = new PaymentViewModel()
        {
            PaymentStatusType = _newPayment.PaymentStatusType,
            Id = _newPayment.Id,
            MyProjectId=_newPayment.MyProjectId
        };
        await ProjectDataService.EditPaymentStatus(payment);
        NavigationManager.NavigateTo($"ViewPaymentStatus/{payment.MyProjectId}");
            

    }
}
