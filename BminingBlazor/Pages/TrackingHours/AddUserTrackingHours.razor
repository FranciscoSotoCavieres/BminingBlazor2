@page "/addusertrackinghour/{day:int}/{month:int}/{year:int}"
@using BminingBlazor.ViewModels.TrackingHours
@using Microsoft.AspNetCore.Http

@inject IHttpContextAccessor HttpContextAccessor
@inject IUserDataService UserDataService
@inject IProjectDataService ProjectDataService
@inject ITimeTrackingService TimeTrackingService
@inject NavigationManager NavigationManager
@inject IDummyProjectDataService DummyProjectDataService

<div class="bmining-app">
    @if (!IsLoading)
    {
        <div class="col-md-12">
            <div>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">@Resource.LoadHours @ViewModel.MyTrackingHourDate.ToShortDateString()</legend>
                    <EditForm Model="@ViewModel" OnValidSubmit="SubmitCallback">
                        <div class="form-group">
                            <label for="inputHours">@Resource.InvestedHours</label>
                            <input type="number" @bind="@ViewModel.MyHours" step="0.1" class="form-control" id="inputHours" placeholder="@Resource.InvestedHours">
                        </div>
                        <div class="form-group">
                            <label for="inputProject">@Resource.Project</label>
                            <select @bind="@ViewModel.MySelectedProjectId" class="form-control" id="inputProject">

                                @foreach (var projectDetailsViewModel in ViewModel?.OurAvailableProjects)
                                {
                                    <option value="@projectDetailsViewModel.MyProjectId">
                                        @projectDetailsViewModel.MyProjectCode - @projectDetailsViewModel.MyProjectName
                                    </option>
                                }
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary float-lg-right">@Resource.Load</button>
                    </EditForm>
                </fieldset>
            </div>
        </div>
    }
    else
    {
        <MatProgressBar Indeterminate="true"></MatProgressBar>
    }
    
</div>

@code {
    [Parameter]
    public int Day { get; set; }
    [Parameter]
    public int Month { get; set; }
    [Parameter]
    public int Year { get; set; }


    public bool IsLoading { get; set; }

    public AddUserTimeTrackingViewModel ViewModel { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var email = HttpContextAccessor.GetEmail();
        var userId = await UserDataService.GetUserId(email);

        var  projectsBelongsUserId= await DummyProjectDataService.GetProjectWhereBelongsUserId(userId);

        ViewModel = new AddUserTimeTrackingViewModel(userId)
        {
            MyTrackingHourDate = new DateTime(Year, Month, Day),
        };
        ViewModel.OurAvailableProjects.AddRange(projectsBelongsUserId);
        ViewModel.MySelectedProjectId = projectsBelongsUserId.FirstOrDefault()?.MyProjectId;
    }

    private async Task SubmitCallback()
    {
        if (!ViewModel.MySelectedProjectId.HasValue)
            return;
        if (ViewModel.MyHours <= 0)
            return;
        IsLoading = true;
        var userId = ViewModel.UserId;
        var projectId = ViewModel.MySelectedProjectId.Value;
        var timeTracking = ViewModel.MyTrackingHourDate;
        var hours = ViewModel.MyHours;
        await TimeTrackingService.AddUserTimeTracking(userId, projectId, timeTracking, hours);
        NavigationManager.NavigateTo($"/dashboard_tracking_hours/{Day}/{Month}/{Year}");
    }
}
