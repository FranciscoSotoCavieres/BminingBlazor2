@page "/projectmanagerdashboard"
@using BminingBlazor.ViewModels.TrackingHours
@using Microsoft.AspNetCore.Http

@inject IMatDialogService MatDialogService
@inject ITimeTrackingService TimeTrackingService
@inject IUserDataService UserDataService
@inject IHttpContextAccessor HttpContextAccessor

<style>
    .item-dashboard-container {
        display: inline-grid;
        grid-template-columns: auto 1fr auto;
        grid-column-gap: 0px;
        align-items: center
    }

    .item-dashboard-item {
        vertical-align: middle;
        display: inline;
        text-align: center;
        padding: 5px
    }
</style>


<div class="bmining-app">
    <h1 class="header-break">@Resource.DashboardProjectManager</h1>

    <div class="main-break">
        <div class="main-circle"></div>
    </div>

    @foreach (var projectManagerTrackingHoursProject in ViewModel.OurProjectManagerTrackingHoursProjects)
    {
        <h3>@projectManagerTrackingHoursProject.MyProjectName</h3>
        <table>
            <tr>
                <th>@Resource.Name</th>
                <th>@Resource.Hours</th>
                <th>@Resource.Date</th>
                <th>@Resource.Actions</th>
            </tr>

            @foreach (var projectManagerTrackingHoursProjectMember in projectManagerTrackingHoursProject.OurProjectManagerTrackingHoursProjectMembers)
            {
                <tr>
                    <td>
                        @projectManagerTrackingHoursProjectMember.MyMemberName
                    </td>
                    <td>
                        @projectManagerTrackingHoursProjectMember.MyHoursLoaded
                    </td>
                    <td>
                        @projectManagerTrackingHoursProjectMember.DateOfHours.ToLongDateString()
                    </td>
                    <td class="text-center">
                        <button @onclick="() => RejectHours(projectManagerTrackingHoursProject,projectManagerTrackingHoursProjectMember)" class="bmining-btn-icon bg-bmining-error">
                            <i class="fa fa-thumbs-down"></i>
                        </button>
                        <button @onclick="() => ApproveHours(projectManagerTrackingHoursProject,projectManagerTrackingHoursProjectMember)" class="bmining-btn-icon">
                            <i class="fa fa-thumbs-up"></i>
                        </button>
                    </td>
                </tr>
            }
        </table>
        <div class="alternate1-break"></div>
    }
</div>


@code {
    public ProjectManagerTrackingHoursApprovalViewModel ViewModel { get; set; }

    protected override void OnInitialized()
    {
        ViewModel = new ProjectManagerTrackingHoursApprovalViewModel();
        base.OnInitialized();

    }

    protected override async Task OnInitializedAsync()
    {
        var id = await UserDataService.GetUserId(HttpContextAccessor.GetEmail());
        ViewModel = await TimeTrackingService.GetPendingTimeTrackingHoursByProjectManager(id);
        await base.OnInitializedAsync();
    }

    private async Task ApproveHours(ProjectManagerTrackingHoursProjectViewModel projectManagerTrackingHoursProject,
                                    ProjectManagerTrackingHoursProjectMemberViewModel projectManagerTrackingHoursProjectMember)
    {
        await TimeTrackingService.ApproveUserTimeTracking(projectManagerTrackingHoursProjectMember.TimeTrackingHoursId);
        projectManagerTrackingHoursProject.OurProjectManagerTrackingHoursProjectMembers.Remove(projectManagerTrackingHoursProjectMember);
    }

    private async Task RejectHours(ProjectManagerTrackingHoursProjectViewModel projectManagerTrackingHoursProject,
                                   ProjectManagerTrackingHoursProjectMemberViewModel projectManagerTrackingHoursProjectMember)
    {
        var reasons = await MatDialogService.PromptAsync(Resource.Reasons);
        await TimeTrackingService.RejectUserTimeTracking(projectManagerTrackingHoursProjectMember.TimeTrackingHoursId, reasons);
        projectManagerTrackingHoursProject.OurProjectManagerTrackingHoursProjectMembers.Remove(projectManagerTrackingHoursProjectMember);
    }
}
