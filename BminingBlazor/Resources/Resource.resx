<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AreYouSureToDelete" xml:space="preserve">
    <value>Are you sure to delete?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="LoadHours" xml:space="preserve">
    <value>Load hours</value>
  </data>
  <data name="InvestedHours" xml:space="preserve">
    <value>Invested hours</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Names" xml:space="preserve">
    <value>Names</value>
  </data>
  <data name="PaternalLastName" xml:space="preserve">
    <value>Paternal Last Name</value>
  </data>
  <data name="MaternalLastName" xml:space="preserve">
    <value>Maternal Last Name</value>
  </data>
  <data name="ProjectManager" xml:space="preserve">
    <value>Project Manager</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AddMember" xml:space="preserve">
    <value>Add Member</value>
  </data>
  <data name="Members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="Reasons" xml:space="preserve">
    <value>Reasons</value>
      </data>
  <data name="StatusProject" xml:space="preserve">
    <value>Status Project</value>
  </data>
  <data name="ContractType" xml:space="preserve">
    <value>Contract Type</value>
  </data>
  <data name="ProjectCode" xml:space="preserve">
    <value>Project Code</value>
  </data>
  <data name="ProjectName" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="ProjectStatus" xml:space="preserve">
    <value>Project Status</value>
  </data>
  <data name="ProjectType" xml:space="preserve">
    <value>Project Type</value>
  </data>
  <data name="EmailProjectManager" xml:space="preserve">
    <value>Email Project Manager</value>
  </data>
  <data name="AddPaymentStatus" xml:space="preserve">
    <value>Add Payment Status</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="BillingDeadline" xml:space="preserve">
    <value>Billing Deadline</value>
  </data>
  <data name="PaymentDeadlineIssued" xml:space="preserve">
    <value>Payment Deadline Issued</value>
  </data>
  <data name="ProjectHours" xml:space="preserve">
    <value>Project Hours</value>
  </data>
  <data name="Rut" xml:space="preserve">
    <value>Rut</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="HomeAddress" xml:space="preserve">
    <value>Home Address</value>
  </data>
  <data name="FeeContract" xml:space="preserve">
    <value>Fee Contract</value>
  </data>
  <data name="FixedTermContract" xml:space="preserve">
    <value>Fixed Term Contract</value>
  </data>
  <data name="IndefiniteContract" xml:space="preserve">
    <value>Indefinite Contract</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="PaymentStatus" xml:space="preserve">
    <value>Payment Status</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>Create User</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="AddProject" xml:space="preserve">
    <value>Add Project</value>
  </data>
  <data name="EditPaymentStatus" xml:space="preserve">
    <value>Edit Payment Status</value>
  </data>
  <data name="CreateProject" xml:space="preserve">
    <value>Create Project</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="NotInitiated" xml:space="preserve">
    <value>Not Initiated</value>
  </data>
  <data name="Emitted" xml:space="preserve">
    <value>Emitted</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="Invoiced" xml:space="preserve">
    <value>Invoiced</value>
  </data>
  <data name="Payed" xml:space="preserve">
    <value>Payed</value>
  </data>
  <data name="NotApply" xml:space="preserve">
    <value>Not Apply</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="InvalidNumber" xml:space="preserve">
    <value>Invalid number</value>
  </data>
  <data name="NewHours" xml:space="preserve">
    <value>New hours</value>
  </data>
  <data name="DashboardHours" xml:space="preserve">
    <value>Dashboard hours</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="DashboardProjectManager" xml:space="preserve">
    <value>Dashboard project manager</value>
  </data>
</root>